import { useState } from 'react';
import styles from './LoginForm.module.scss';
import authService from '../../services/auth.service';
import Button from '../ui/Button/Button';

interface LoginFormProps {
    onRegisterClick: () => void;
    onLoginClick: () => void;
    onSuccess?: () => void;
}

export const LoginForm = ({ onRegisterClick,  onSuccess }: LoginFormProps) => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [showPassword, setShowPassword] = useState(false);
    const [error, setError] = useState('');
    const [isLoading, setIsLoading] = useState(false);

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setError('');
        setIsLoading(true);

        try {
            await authService.login(email, password);
            onSuccess?.();
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', err);
            setError(err instanceof Error ? err.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ');
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className={styles.authForm}>
            <div className={styles.title}>
                <h2>–í—Ö–æ–¥ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>

                <div className={styles.register}>
                    <p>–ï—â—ë –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?</p>
                    <Button styleButton="greenButton" onClick={onRegisterClick}>
                        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </Button>
                </div>
            </div>

            <form onSubmit={handleSubmit}>
                {error && (
                    <div className={styles.error}>
                        {error}
                    </div>
                )}

                <div className={styles.formGroup}>
                    <label>–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞</label>
                    <input
                        type="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                        disabled={isLoading}
                    />
                </div>

                <div className={styles.formGroup}>
                    <label>–ü–∞—Ä–æ–ª—å</label>
                    <div className={styles.passwordInput}>
                        <input
                            type={showPassword ? "text" : "password"}
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            required
                            disabled={isLoading}
                        />
                        <button
                            type="button"
                            className={styles.togglePassword}
                            onClick={() => setShowPassword(!showPassword)}
                        >
                            {showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è"}
                        </button>
                    </div>
                </div>

                <div className={styles.formActions}>
                    <Button styleButton='blueButton' type="submit" disabled={isLoading}>
                        {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'}
                    </Button>
                    <button
                        type="button"
                        className={styles.linkButton}
                        disabled={isLoading}
                    >
                        –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å
                    </button>
                </div>
            </form>
        </div>
    );
};

export default LoginForm;
